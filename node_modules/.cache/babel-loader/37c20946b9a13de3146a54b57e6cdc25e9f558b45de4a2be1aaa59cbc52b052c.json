{"ast":null,"code":"import React,{useState,useEffect}from'react';import PokemonCard from'./PokemonCard';import PokemonDetails from'./PokemonDetails';import Pagination from'./Pagination';import{getPokemonByType,getPokemonDetails}from'../Services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PokemonList=_ref=>{let{type}=_ref;const[pokemons,setPokemons]=useState([]);const[selectedPokemon,setSelectedPokemon]=useState(null);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const pokemonsPerPage=10;useEffect(()=>{const fetchPokemons=async()=>{const{results,count}=await getPokemonByType(type,(currentPage-1)*pokemonsPerPage,pokemonsPerPage);setPokemons(results);setTotalPages(Math.ceil(count/pokemonsPerPage));};fetchPokemons();},[type,currentPage]);const handlePokemonClick=async pokemonName=>{const details=await getPokemonDetails(pokemonName);setSelectedPokemon(details);};const handlePageChange=page=>{setCurrentPage(page);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-grid\",children:pokemons.map(pokemon=>/*#__PURE__*/_jsx(PokemonCard,{pokemon:pokemon,onClick:()=>handlePokemonClick(pokemon.name)},pokemon.name))}),selectedPokemon&&/*#__PURE__*/_jsx(PokemonDetails,{pokemon:selectedPokemon,onClose:()=>setSelectedPokemon(null)}),/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,onPageChange:handlePageChange})]});};export default PokemonList;","map":{"version":3,"names":["React","useState","useEffect","PokemonCard","PokemonDetails","Pagination","getPokemonByType","getPokemonDetails","jsx","_jsx","jsxs","_jsxs","PokemonList","_ref","type","pokemons","setPokemons","selectedPokemon","setSelectedPokemon","currentPage","setCurrentPage","totalPages","setTotalPages","pokemonsPerPage","fetchPokemons","results","count","Math","ceil","handlePokemonClick","pokemonName","details","handlePageChange","page","children","className","map","pokemon","onClick","name","onClose","onPageChange"],"sources":["C:/Users/Teresa/Documents/Pokemon-app/src/Components/PokemonList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport PokemonDetails from './PokemonDetails';\r\nimport Pagination from './Pagination';\r\nimport { getPokemonByType, getPokemonDetails } from '../Services/api';\r\n\r\nconst PokemonList = ({ type }) => {\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [selectedPokemon, setSelectedPokemon] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const pokemonsPerPage = 10;\r\n\r\n    useEffect(() => {\r\n        const fetchPokemons = async () => {\r\n            const { results, count } = await getPokemonByType(type, (currentPage - 1) * pokemonsPerPage, pokemonsPerPage);\r\n            setPokemons(results);\r\n            setTotalPages(Math.ceil(count / pokemonsPerPage));\r\n        };\r\n        fetchPokemons();\r\n    }, [type, currentPage]);\r\n\r\n    const handlePokemonClick = async (pokemonName) => {\r\n        const details = await getPokemonDetails(pokemonName);\r\n        setSelectedPokemon(details);\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pokemon-grid\">\r\n                {pokemons.map(pokemon => (\r\n                    <PokemonCard \r\n                        key={pokemon.name} \r\n                        pokemon={pokemon} \r\n                        onClick={() => handlePokemonClick(pokemon.name)} \r\n                    />\r\n                ))}\r\n            </div>\r\n            {selectedPokemon && (\r\n                <PokemonDetails \r\n                    pokemon={selectedPokemon} \r\n                    onClose={() => setSelectedPokemon(null)} \r\n                />\r\n            )}\r\n            <Pagination \r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={handlePageChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,OAASC,gBAAgB,CAAEC,iBAAiB,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtE,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACzB,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACgB,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACoB,UAAU,CAAEC,aAAa,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAAAsB,eAAe,CAAG,EAAE,CAE1BrB,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAsB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,KAAM,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAApB,gBAAgB,CAACQ,IAAI,CAAE,CAACK,WAAW,CAAG,CAAC,EAAII,eAAe,CAAEA,eAAe,CAAC,CAC7GP,WAAW,CAACS,OAAO,CAAC,CACpBH,aAAa,CAACK,IAAI,CAACC,IAAI,CAACF,KAAK,CAAGH,eAAe,CAAC,CAAC,CACrD,CAAC,CACDC,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,CAACV,IAAI,CAAEK,WAAW,CAAC,CAAC,CAEvB,KAAM,CAAAU,kBAAkB,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC9C,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAxB,iBAAiB,CAACuB,WAAW,CAAC,CACpDZ,kBAAkB,CAACa,OAAO,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,IAAI,EAAK,CAC/Bb,cAAc,CAACa,IAAI,CAAC,CACxB,CAAC,CAED,mBACItB,KAAA,QAAAuB,QAAA,eACIzB,IAAA,QAAK0B,SAAS,CAAC,cAAc,CAAAD,QAAA,CACxBnB,QAAQ,CAACqB,GAAG,CAACC,OAAO,eACjB5B,IAAA,CAACN,WAAW,EAERkC,OAAO,CAAEA,OAAQ,CACjBC,OAAO,CAAEA,CAAA,GAAMT,kBAAkB,CAACQ,OAAO,CAACE,IAAI,CAAE,EAF3CF,OAAO,CAACE,IAGhB,CACJ,CAAC,CACD,CAAC,CACLtB,eAAe,eACZR,IAAA,CAACL,cAAc,EACXiC,OAAO,CAAEpB,eAAgB,CACzBuB,OAAO,CAAEA,CAAA,GAAMtB,kBAAkB,CAAC,IAAI,CAAE,CAC3C,CACJ,cACDT,IAAA,CAACJ,UAAU,EACPc,WAAW,CAAEA,WAAY,CACzBE,UAAU,CAAEA,UAAW,CACvBoB,YAAY,CAAET,gBAAiB,CAClC,CAAC,EACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAApB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}